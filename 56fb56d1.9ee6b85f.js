(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{111:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return s}));var o=t(1),i=t(6),a=(t(0),t(127)),r={id:"configure-openhim-mapping-mediator",title:"How to configure OpenHIM Mapping Mediator",sidebar_label:"Configure OpenHIM Mapping Mediator",keywords:["Instant OpenHIE","How to","Creating packages","OpenHIM","OpenHIM Mapping Mediator"],description:"How to configure OpenHIM Mapping Mediator"},p={id:"how-to/configure-openhim-mapping-mediator",title:"How to configure OpenHIM Mapping Mediator",description:"How to configure OpenHIM Mapping Mediator",source:"@site/docs/how-to/configure-openhim-mapping-mediator.mdx",permalink:"/instant/docs/how-to/configure-openhim-mapping-mediator",editUrl:"https://github.com/openhie/instant/tree/master/docs/docs/how-to/configure-openhim-mapping-mediator.mdx",sidebar_label:"Configure OpenHIM Mapping Mediator",sidebar:"docs",previous:{title:"How to setup managed Kubernetes in the cloud",permalink:"/instant/docs/how-to/setup-kubernetes-in-cloud"},next:{title:"Core Package",permalink:"/instant/docs/packages/core"}},c=[{value:"Importing Endpoints",id:"importing-endpoints",children:[{value:"Docker",id:"docker",children:[]}]},{value:"Kubernetes",id:"kubernetes",children:[]},{value:"Useful Links",id:"useful-links",children:[]}],l={rightToc:c};function s(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"The Instant OpenHIE architecture, codebase, and documentation are under active development and are subject to change. While we encourage adoption and extension of the Instant OpenHIE framework, we do not consider this ready for production use at this stage."))),Object(a.b)("p",null,Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"http://openhim.org/docs/user-guide/mediators"}),"OpenHIM mediators")," are HTTP services that are registered and tracked by the OpenHIM Core. As such, a mediator is not unique in the way it is set up for use in an Instant OpenHIE package. The only requirement is that it be packaged as a Docker image."),Object(a.b)("p",null,"The ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://jembi.github.io/openhim-mediator-mapping"}),"OpenHIM Mapping Mediator"),", however, is a bit more sophisticated than the average OpenHIM mediator as it is generic and designed for re-use. This mediator usually requires an endpoint configuration(s) to be imported once the mediator is up and running. The endpoint config payload can be sent as a POST request to the ",Object(a.b)("inlineCode",{parentName:"p"},"/endpoints")," path of the mediator. For more information on the Mapping Mediator endpoints, read ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://jembi.github.io/openhim-mediator-mapping/docs/gettingStarted/endpoints"}),"here"),"."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Note: This guide assumes that you have an existing custom package and that the OpenHIM Mapping Mediator is already set up but has not been configured with endpoints.")),Object(a.b)("h2",{id:"importing-endpoints"},"Importing Endpoints"),Object(a.b)("h3",{id:"docker"},"Docker"),Object(a.b)("p",null,"To import the mediator endpoint config in an Instant OpenHIE package we use the Instant OpenHIE Config Importer docker image. In your package source code repository, under the ",Object(a.b)("inlineCode",{parentName:"p"},"docker")," directory, create an ",Object(a.b)("inlineCode",{parentName:"p"},"importer")," directory. Your directory structure should now look like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-text"}),"example-package/\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 importer/\n\u2514\u2500\u2500 ...\n")),Object(a.b)("p",null,"Under the importer subdirectory of the docker directory, add a file named ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose.config.yml")," with the following contents:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"version: '3.3'\n\nservices:\n  # container for executing config import scripts for setting up initial config\n  example-endpoint-config-importer:\n    container_name: example-endpoint-config-importer\n    image: jembi/instantohie-config-importer:latest\n    restart: on-failure\n    environment:\n      MEDIATOR_HOSTNAME: 'example-mediator'\n      MEDIATOR_API_PORT: 3003\n    volumes:\n      - type: volume\n        source: instant\n        target: /instant\n    # This command will only attempt to import the covid19immunization-mediator config when the uptime endpoint responds with 200\n    command: sh -c \"wait-on -t 60000 http-get://example-mediator:3003/uptime && sleep 1 && node /instant/example-package/docker/importer/volume/endpoint.js\"\n\nvolumes:\n  instant:\n    external: true\n")),Object(a.b)("p",null,"The previous example will set up a docker container that will run a custom Node.js script that can send the endpoint config to a running instance of the mediator. The ",Object(a.b)("inlineCode",{parentName:"p"},"command")," for running this container waits for the mediator to be up and running before the import script (endpoint.js) is started."),Object(a.b)("p",null,"Next, add the following files under a new volume subdirectory of the docker importer directory (",Object(a.b)("inlineCode",{parentName:"p"},"docker/importer/volume"),"). Add the following files for the volume directory:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"example-endpoint.json")," - the example endpoint configuration file to be imported. For more details on endpoint configs, visit the ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://jembi.github.io/openhim-mediator-mapping/docs/gettingStarted/endpoints"}),"OpenHIM Mapping Mediator Endpoint Docs"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"endpoint.js")," - a Node.js script that is capable of importing the ",Object(a.b)("inlineCode",{parentName:"li"},"example-endpoint.json")," contents into a Mapping Mediator instance.")),Object(a.b)("p",null,"Finally, update the contents of your docker ",Object(a.b)("inlineCode",{parentName:"p"},"docker/compose.sh")," script to include the importer docker-compose file. The file could look like the following when updated:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),'#!/bin/bash\n\nsleep 10\n\ncomposeFilePath=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )\n\nif [ "$1" == "init" ]; then\n    docker-compose -p instant -f "$composeFilePath"/docker-compose.yml -f "$composeFilePath"/docker-compose.dev.yml -f "$composeFilePath"/importer/docker-compose.config.yml up -d\nelif [ "$1" == "up" ]; then\n    docker-compose -p instant -f "$composeFilePath"/docker-compose.yml -f "$composeFilePath"/docker-compose.dev.yml up -d\nelif [ "$1" == "down" ]; then\n    docker-compose -p instant -f "$composeFilePath"/docker-compose.yml -f "$composeFilePath"/docker-compose.dev.yml -f "$composeFilePath"/importer/docker-compose.config.yml stop\nelif [ "$1" == "destroy" ]; then\n    docker-compose -p instant -f "$composeFilePath"/docker-compose.yml -f "$composeFilePath"/docker-compose.dev.yml -f "$composeFilePath"/importer/docker-compose.config.yml down\nelse\n    echo "Valid options are: init, up, down, or destroy"\nfi\n')),Object(a.b)("p",null,"The directory structure should now look like the following:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-text"}),"example-package/\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 importer/\n\u2502       \u251c\u2500\u2500 volume/\n\u2502           \u251c\u2500\u2500 endpoint.js\n\u2502           \u251c\u2500\u2500 example-endpoint.json\n\u2502       \u251c\u2500\u2500 docker-compose.config.yml\n\u2502   \u251c\u2500\u2500 compose.sh\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 ...\n")),Object(a.b)("p",null,"With all of the docker setup in place, it is now time to import the endpoint in Kubernetes."),Object(a.b)("h2",{id:"kubernetes"},"Kubernetes"),Object(a.b)("p",null,"For Kubernetes, create an importer directory under the ",Object(a.b)("inlineCode",{parentName:"p"},"kubernetes")," directory. Under the importer directory, add the following files and directories:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"example-endpoint-importer-job.yaml")," - similar to the ",Object(a.b)("inlineCode",{parentName:"li"},"docker-compose.config.yml")," of the docker scripts, this file will create a Kubernetes ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/workloads/controllers/job/"}),"job")," that will be responsible for running the ",Object(a.b)("inlineCode",{parentName:"li"},"endpoint.js")," script."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"k8s.sh")," - to configure, start, and stop the Kubernetes importer jobs."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"kustomization.yaml")," - a tool for customizing Kubernetes configurations. More kubernetes information ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/"}),"here"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"volume/")," - this directory will be the same as its docker counterpart. You can copy the docker version and all its contents to this Kubernetes destination.")),Object(a.b)("p",null,"The package directory structure should now look like the following:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-text"}),"example-package/\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 importer/\n\u2502       \u251c\u2500\u2500 volume/\n\u2502           \u251c\u2500\u2500 endpoint.js\n\u2502           \u251c\u2500\u2500 example-endpoint.json\n\u2502       \u251c\u2500\u2500 docker-compose.config.yml\n\u2502   \u251c\u2500\u2500 compose.sh\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 kubernetes/\n\u2502   \u251c\u2500\u2500 importer/\n\u2502       \u251c\u2500\u2500 volume/\n\u2502           \u251c\u2500\u2500 endpoint.js\n\u2502           \u251c\u2500\u2500 example-endpoint.json\n\u2502   \u251c\u2500\u2500 example-endpoint-importer-job.yaml\n\u2502   \u251c\u2500\u2500 k8s.sh\n\u2502   \u251c\u2500\u2500 kustomization.yaml\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 ...\n")),Object(a.b)("p",null,"Add the following contents to the ",Object(a.b)("inlineCode",{parentName:"p"},"example-endpoint-importer-job.yaml")," file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: example-endpoint-importer-job\n  labels:\n    app.kubernetes.io/name: endpoint-importer\n    app.kubernetes.io/instance: example-mapper-endpoint-importer-1\n    app.kubernetes.io/version: '0.1'\n    app.kubernetes.io/component: endpoint-importer\n    package: examplePackage\nspec:\n  backoffLimit: 3\n  template:\n    spec:\n      initContainers:\n        - name: example-check-mapper-status\n          image: busybox:1.28\n          command: ['sh', '-c', 'until telnet mapper-service 3003; do echo Mapping mediator not running yet; sleep 10; done;']\n      containers:\n        - name: example-endpoint-importer\n          image: jembi/instantohie-config-importer:latest\n          args:\n            - sh\n            - -c\n            - wait-on -t 60000 http-get://example-mapper-service:3003/uptime && node endpoint.js\n          env:\n            - name: MEDIATOR_HOST_NAME\n              value: 'example-mapper-service'\n            - name: MEDIATOR_API_PORT\n              value: '3003'\n          volumeMounts:\n            - mountPath: /importer\n              name: example-endpoint-importer\n      restartPolicy: OnFailure\n      volumes:\n        - name: example-endpoint-importer\n          configMap:\n            name: example-endpoint-importer-configmap\n")),Object(a.b)("p",null,"Just like the docker-compose.config.yml, this script will run a ",Object(a.b)("inlineCode",{parentName:"p"},"jembi/instantohie-config-importer")," container as a Kubernetes job. The script will wait for the OpenHIM Mapping Mediator service/pod to be ready before it executes the ",Object(a.b)("inlineCode",{parentName:"p"},"endpoint.js")," script."),Object(a.b)("p",null,"Add the following code to the ",Object(a.b)("inlineCode",{parentName:"p"},"kustomization.yml")," file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"configMapGenerator:\n  - name: example-endpoint-importer-configmap\n    files:\n      - ./volume/endpoint.js\nresources:\n  - ./example-endpoint-importer-job.yaml\n")),Object(a.b)("p",null,"This config generates a Kubernetes ",Object(a.b)("inlineCode",{parentName:"p"},"configMap")," for the ",Object(a.b)("inlineCode",{parentName:"p"},"example-endpoint-importer")," job based on the contents of the ",Object(a.b)("inlineCode",{parentName:"p"},"example-endpoint-importer-job.yaml")," Kubernetes file."),Object(a.b)("p",null,"Finally, update the ",Object(a.b)("inlineCode",{parentName:"p"},"k8s.sh")," file with the following script:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),'#!/bin/bash\n\nk8sImporterRootFilePath=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )\n\nif [ "$1" == "up" ]; then\n    kubectl apply -k $k8sImporterRootFilePath\nelif [ "$1" == "clean" ]; then\n    kubectl delete -k $k8sImporterRootFilePath\n    kubectl delete jobs --all\nelse\n    echo "Valid options are: up, or clean"\nfi\n')),Object(a.b)("p",null,"With everything set up, you should now be able to start Instant OpenHIE with your custom package and the OpenHIM Mapping Mediator should be running and successfully configured."),Object(a.b)("h2",{id:"useful-links"},"Useful Links"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{href:"https://openhie.github.io/instant/",target:"_blank"},"Instant OpenHIE docs")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{href:"http://openhim.org/",target:"_blank"},"OpenHIM")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{href:"https://jembi.github.io/openhim-mediator-mapping/",target:"_blank"},"OpenHIM Mapping Mediator"))))}s.isMDXComponent=!0},127:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return u}));var o=t(0),i=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),s=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p({},n,{},e)),t},m=function(e){var n=s(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(t),b=o,u=m["".concat(r,".").concat(b)]||m[b]||d[b]||a;return t?i.a.createElement(u,p({ref:n},l,{components:t})):i.a.createElement(u,p({ref:n},l))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=b;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,r[1]=p;for(var l=2;l<a;l++)r[l]=t[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);