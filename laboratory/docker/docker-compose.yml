## Assumption: Core module and emr module depenencies are launched using docker-compose

version: '3.3'
services:
    database:
        container_name: openelisglobal-database 
        image: postgres:9.5
        ports:
            - "15432:5432"
        restart: always
        env_file:
            - ./config/database/database.env
        volumes:
              # preserves the database between containers
            - db-data:/var/lib/postgresql/data                
              # files here will run on install
            - ./config/database/dbInit:/docker-entrypoint-initdb.d
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "clinlims", "-U", "clinlims" ]
            timeout: 45s
            interval: 10s
            retries: 10 
            
    oe.openelis.org:
        container_name: openelisglobal-webapp 
        image: ghcr.io/i-tech-uw/openelis-global-2:pr-281
        ports:
            - "8080:8080"
            - "8443:8443"
        restart: always
        environment:
           # context.xml doesn't seem to be able to pick up environment variables directly, so we are passing them in as CATALINA_OPTS
            - CATALINA_OPTS= -Ddatasource.url=jdbc:postgresql://database:5432/clinlims?currentSchema=clinlims -Ddatasource.username=clinlims -Ddatasource.password=clinlims
        volumes:
            # - ./dev/plugins:/var/lib/openelis-global/plugins
            - ./dev/tomcat/oe_server.xml:/usr/local/tomcat/conf/server.xml
        secrets:
            # - source: keystore
            # - source: truststore
            - source: common.properties
            
    fhir.openelis.org:
        container_name: hapi-fhir-jpaserver
        image: hapiproject/hapi:latest
        ports:
            - "8081:8080"
            - "8444:8443"
        restart: unless-stopped
        environment:
            - JAVA_OPTS= -Dhapi.properties=/run/secrets/hapi.properties
        volumes:
            - ./config/tomcat/hapi_server.xml:/usr/local/tomcat/conf/server.xml
        extra_hosts:
#    this should be the loopback to the docker host. 
#    run 
#    /sbin/ip route|awk '/default/ { print $3 }' 
#    inside the container to make sure the ip address is correct
#    make sure connections to 8446 are allowed by your firewall
            - host.openelis.org:172.20.0.1
        secrets:
            - source: hapi.properties
            - source: common.properties
            # - source: keystore
            # - source: truststore
            
volumes:
  db-data:            
secrets:
  common.properties:
    file: ./config/properties/common.properties  
  hapi.properties:
    file: ./config/properties/hapi.properties
    
    